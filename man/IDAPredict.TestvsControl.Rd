% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IDAPredict.TestvsControl.R
\name{IDAPredict.TestvsControl}
\alias{IDAPredict.TestvsControl}
\title{Predicts and compares IDA efficacies for a pair of control and test treatments}
\usage{
IDAPredict.TestvsControl(
  Monotherapy_Data,
  Cell_Line_Name_Column,
  Drug_Name_Column,
  Drug_Concentration_Column,
  Efficacy_Column,
  LowerEfficacyIsBetterDrugEffect,
  EfficacyMetricName = "Efficacy",
  Control_Treatment_Drugs,
  Control_Treatment_Drug_Concentrations,
  Test_Treatment_Drugs,
  Test_Treatment_Drug_Concentrations,
  Calculate_Uncertainty = FALSE,
  Efficacy_SE_Column = NULL,
  n_Simulations = 1000,
  CalculateHazardRatio = FALSE,
  Average_Duplicate_Records = FALSE,
  Return_Monte_Carlo_HRs = FALSE
)
}
\arguments{
\item{Monotherapy_Data}{A data frame where each row contains information about the response of a single cell line to a single drug at a single concentration. Must minimally include columns containing the following information: cell line name, drug name, drug concentration, and measured drug efficacy. May optionally include a column recording the standard error (SE) of the measured drug efficacy.}

\item{Cell_Line_Name_Column}{A character vector of length 1 containing the name of the column in the Monotherapy_Data data frame which contains cell line names.}

\item{Drug_Name_Column}{A character vector of length 1 containing the name of the column in the Monotherapy_Data data frame which contains drug names.}

\item{Drug_Concentration_Column}{A character vector of length 1 containing the name of the column in the Monotherapy_Data data frame which contains drug concentrations.}

\item{Efficacy_Column}{A character vector of length 1 containing the name of the column in the Monotherapy_Data data frame which contains measured drug efficacies (i.e. percent Viability, percent Cell Growth, etc.).}

\item{LowerEfficacyIsBetterDrugEffect}{A logic vector of length 1 indicating whether or not lower values in Efficacy_Column indicate a more effective drug effect (i.e. for percent viability). Set TRUE if so. Otherwise, set FALSE if higher values in Efficacy_Column indicate a more effective drug response (i.e. for percent cell death).}

\item{EfficacyMetricName}{A character vector of length 1 indicating the name of the efficacy metric being used (i.e. Percent_Viability, Percent_Growth, etc.). Used to correctly label column names in output. Defaults to "Efficacy".}

\item{Control_Treatment_Drugs}{A character vector of length > 0 containing the names of the drugs in the control drug treatment for which efficacy predictions are to be made.}

\item{Control_Treatment_Drug_Concentrations}{A vector of drug concentrations for Control_Treatment_Drugs with the first concentration in Control_Treatment_Drug_Concentrations corresponding to the first drug in Control_Treatment_Drugs etc. Only one concentration may be specified for each drug in the control treatment, but, if a drug is included in both the control and test treatments, there is no need for the same concentration of that drug to be used in both treatments.}

\item{Test_Treatment_Drugs}{A character vector of length > 0 containing the names of the drugs in the control drug treatment for which efficacy predictions are to be made.}

\item{Test_Treatment_Drug_Concentrations}{A vector of drug concentrations for Test_Treatment_Drugs with the first concentration in Test_Treatment_Drug_Concentrations corresponding to the first drug in Test_Treatment_Drugs etc. Only one concentration may be specified for each drug in the test treatment, but, if a drug is included in both the control and test treatments, there is no need for the same concentration of that drug to be used in both treatments.}

\item{Calculate_Uncertainty}{A logic vector of length one indicating whether or not a Monte Carlo simulation should be performed to estimate uncertainties in the efficacy predictions based on uncertainties in the monotherapy efficacy measurements. Set TRUE if you wish to calculate uncertainties. Defaults to FALSE.}

\item{Efficacy_SE_Column}{A character vector of length 1 containing the name of the column in the Monotherapy_Data data frame which contains the standard errors of measured drug efficacies. Must be specified if Calculate_Uncertainty is set to TRUE.}

\item{n_Simulations}{A positive, non-zero integer vector of length 1 indicating the number of Monte Carlo iterations to be run when calculating output efficacy prediction uncertainties. Must be specified if Calculate_Uncertainty is set to TRUE. Defaults to 1000.}

\item{CalculateHazardRatio}{A logic vector of length 1 indicating whether or not a Hazard Ratios (HR) should be calculated between the control and test treatments. Set TRUE if so. Should only be set to TRUE for efficacy metrics that range between 0 and 1 (i.e. percent viability). Defaults to FALSE.}

\item{Average_Duplicate_Records}{A logic vector of length 1 indicating whether or not duplicated records (where a cell line has multiple records for being tested with a given drug at a given concentration) should be averaged. If TRUE, Efficacy values are averaged, and, if Calculate_Uncertainty is also TRUE, Efficacy_SE values are added in quadrature and divided by the number of duplicate records for that cell line/drug/concentration set.}

\item{Return_Monte_Carlo_HRs}{A logic vector of length 1 indicating whether or not the function should return the Hazard Ratios(HRs) simulated in a Monte Carlo simulation to estimate the Standard Erorr (SE) of the HR of the test treatment vs the control treatment. This parameter is ignored unless Calculate_Uncertainty = TRUE and CalculateHazardRatios = TRUE. This should be set to TRUE if the simulated HRs are needed to estimate uncertainties in downstream power analyses.}
}
\value{
If Return_Monte_Carlo_HRs = FALSE, this function returns a list with 4 elements: 1) A data frame with the produced efficacy predictions. 2) A data frame listing the control treatment drug names and concentrations. 3) A data frame listing the test treatment drug names and concentrations. 4) A character vector containing the names of the cell lines used to make the efficacy predictions. If Return_Monte_Carlo_HRs = TRUE & Calculate_Uncertainty = TRUE & CalculateHazardRatio = TRUE, this function returns a list with 5 elements: the first 4 elements being the same as when Return_Monte_Carlo_HRs = FALSE and the fifth element being a numeric vector of the Hazard Ratios simulated during the Monte Carlo simulation to estimate standard errors.
}
\description{
This function creates efficacy predictions for a pair of control and test treatments, each treatment consisting of a combination of one or more drugs, using monotherapy efficacy data and the assumptions of independent drug action. Concentrations must be specified for each drug in each treatment.
}
\examples{
#Loading Package
  library(IDACombo)

#Making fake monotherapy dataset
  CellLineNames <- rep(c("CL1", "CL2", "CL3", "CL4", "CL5", "CL6"), 6)
  DrugNames <- c(rep("D1", 12), rep("D2", 12), rep("D3", 12))
  Concentrations <- c(rep(1, 6), rep(2, 6), rep(1.5, 6), rep(3, 6), rep("A", 6), rep("B", 6))
  Viability <- c(sample(seq(0.4,1,length.out = 10), 6, replace = TRUE),
                 sample(seq(0.2,0.8,length.out = 10), 6, replace = TRUE),
                 sample(seq(0.4,1,length.out = 10), 6, replace = TRUE),
                 sample(seq(0.2,0.6,length.out = 10), 6, replace = TRUE),
                 sample(seq(0.9,1,length.out = 10), 6, replace = TRUE),
                 sample(seq(0.2,0.6,length.out = 10), 6, replace = TRUE))
  Viability_SE <- Viability * sample(seq(0,0.1,length.out = 100), 36, replace = TRUE)
  Fake_Data <- data.frame(CellLineNames, DrugNames, Concentrations, Viability, Viability_SE)

#Creating efficacy predictions for control and test treatments and comparing without
#uncertainty calculations
  #For case where drugs in test treatment are at reduced concentrations from
  #those used in the control treatment due to the addition of a third drug.
  #Note that this may mean that the test treatment is less effective than
  #the control treatment, such that the Hazard Ratio is > 1.
    IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                             Cell_Line_Name_Column = "CellLineNames",
                             Drug_Name_Column = "DrugNames",
                             Drug_Concentration_Column = "Concentrations",
                             Efficacy_Column = "Viability",
                             Control_Treatment_Drugs = c("D1", "D2"),
                             Control_Treatment_Drug_Concentrations = c(2, 3),
                             Test_Treatment_Drugs = c("D1", "D2", "D3"),
                             Test_Treatment_Drug_Concentrations = c(1, 1.5, "B"),
                             Calculate_Uncertainty = FALSE,
                             LowerEfficacyIsBetterDrugEffect = TRUE,
                             EfficacyMetricName = "Viability",
                             CalculateHazardRatio = TRUE,
                             Average_Duplicate_Records = FALSE)

  #For case where drugs in test treatment are at same concentrations as
  #those used in the control treatment.
    IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                             Cell_Line_Name_Column = "CellLineNames",
                             Drug_Name_Column = "DrugNames",
                             Drug_Concentration_Column = "Concentrations",
                             Efficacy_Column = "Viability",
                             Control_Treatment_Drugs = c("D1", "D2"),
                             Control_Treatment_Drug_Concentrations = c(2, 3),
                             Test_Treatment_Drugs = c("D1", "D2", "D3"),
                             Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                             Calculate_Uncertainty = FALSE,
                             LowerEfficacyIsBetterDrugEffect = TRUE,
                             EfficacyMetricName = "Viability",
                             CalculateHazardRatio = TRUE,
                             Average_Duplicate_Records = FALSE)

#Creating efficacy predictions for control and test treatments and comparing with
#uncertainty calculations but without returning Hazard Ratios that are generated
#using a Monte Carlo simulation to estimate standard errors.

  IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                           Cell_Line_Name_Column = "CellLineNames",
                           Drug_Name_Column = "DrugNames",
                           Drug_Concentration_Column = "Concentrations",
                           Efficacy_Column = "Viability",
                           Control_Treatment_Drugs = c("D1", "D2"),
                           Control_Treatment_Drug_Concentrations = c(2, 3),
                           Test_Treatment_Drugs = c("D1", "D2", "D3"),
                           Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                           Calculate_Uncertainty = TRUE,
                           Efficacy_SE_Column = "Viability_SE",
                           n_Simulations = 1000,
                           LowerEfficacyIsBetterDrugEffect = TRUE,
                           EfficacyMetricName = "Viability",
                           CalculateHazardRatio = TRUE,
                           Average_Duplicate_Records = FALSE)

#Creating efficacy predictions for control and test treatments and comparing with
#uncertainty calculations and with returning Hazard Ratios that are generated
#using a Monte Carlo simulation to estimate standard errors.

  IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                           Cell_Line_Name_Column = "CellLineNames",
                           Drug_Name_Column = "DrugNames",
                           Drug_Concentration_Column = "Concentrations",
                           Efficacy_Column = "Viability",
                           Control_Treatment_Drugs = c("D1", "D2"),
                           Control_Treatment_Drug_Concentrations = c(2, 3),
                           Test_Treatment_Drugs = c("D1", "D2", "D3"),
                           Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                           Calculate_Uncertainty = TRUE,
                           Efficacy_SE_Column = "Viability_SE",
                           n_Simulations = 1000,
                           LowerEfficacyIsBetterDrugEffect = TRUE,
                           EfficacyMetricName = "Viability",
                           CalculateHazardRatio = TRUE,
                           Average_Duplicate_Records = FALSE,
                           Return_Monte_Carlo_HRs = TRUE)

#Converting Viabilty to reduction in viability and redoing calculations
#without returning Monte Carlo Hazard Ratios. Note the change in the
#LowerEfficacyIsBetterDrugEffect flag from TRUE to FALSE
  Reduction_in_Viability <- 1-Viability
  Reduction_in_Viability_SE <- Viability_SE
  Fake_Data <- data.frame(CellLineNames,
                          DrugNames,
                          Concentrations,
                          Reduction_in_Viability,
                          Reduction_in_Viability_SE)
  IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                           Cell_Line_Name_Column = "CellLineNames",
                           Drug_Name_Column = "DrugNames",
                           Drug_Concentration_Column = "Concentrations",
                           Efficacy_Column = "Reduction_in_Viability",
                           Control_Treatment_Drugs = c("D1", "D2"),
                           Control_Treatment_Drug_Concentrations = c(2, 3),
                           Test_Treatment_Drugs = c("D1", "D2", "D3"),
                           Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                           Calculate_Uncertainty = TRUE,
                           Efficacy_SE_Column = "Reduction_in_Viability_SE",
                           n_Simulations = 1000,
                           LowerEfficacyIsBetterDrugEffect = FALSE,
                           EfficacyMetricName = "Reduction_in_Viability",
                           CalculateHazardRatio = TRUE,
                           Average_Duplicate_Records = FALSE)

#Changing efficacy metric to percent growth (range -1 to 1)
#Note that calculating Hazard Ratios is no longer valid, so
#CalculateHazardRatio is set to FALSE.
  Percent_Growth <- c(sample(seq(0.4,1,length.out = 10), 6, replace = TRUE),
                      sample(seq(-0.4,0.2,length.out = 10), 6, replace = TRUE),
                      sample(seq(-0.2,0.3,length.out = 10), 6, replace = TRUE),
                      sample(seq(-1,0.2,length.out = 10), 6, replace = TRUE),
                      sample(seq(0.8,1,length.out = 10), 6, replace = TRUE),
                      sample(seq(-1,-0.2,length.out = 10), 6, replace = TRUE))
  Percent_Growth_SE <- abs(Percent_Growth * sample(seq(0,0.1,length.out = 100), 36, replace = TRUE))
  Fake_Data <- data.frame(CellLineNames,
                          DrugNames,
                          Concentrations,
                          Percent_Growth,
                          Percent_Growth_SE)
  IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                           Cell_Line_Name_Column = "CellLineNames",
                           Drug_Name_Column = "DrugNames",
                           Drug_Concentration_Column = "Concentrations",
                           Efficacy_Column = "Percent_Growth",
                           Control_Treatment_Drugs = c("D1", "D2"),
                           Control_Treatment_Drug_Concentrations = c(2, 3),
                           Test_Treatment_Drugs = c("D1", "D2", "D3"),
                           Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                           Calculate_Uncertainty = TRUE,
                           Efficacy_SE_Column = "Percent_Growth_SE",
                           n_Simulations = 1000,
                           LowerEfficacyIsBetterDrugEffect = TRUE,
                           EfficacyMetricName = "Percent_Growth",
                           CalculateHazardRatio = FALSE,
                           Average_Duplicate_Records = FALSE)

#Adding duplicate records for each cell line, and showing behavior with
#Average_Duplicate_Records = FALSE. Should produce warning messages that
#duplicates were found and removed.
  Percent_Growth <- c(sample(seq(0.4,1,length.out = 10), 6, replace = TRUE),
                      sample(seq(-0.4,0.2,length.out = 10), 6, replace = TRUE),
                      sample(seq(-0.2,0.3,length.out = 10), 6, replace = TRUE),
                      sample(seq(-1,0.2,length.out = 10), 6, replace = TRUE),
                      sample(seq(0.8,1,length.out = 10), 6, replace = TRUE),
                      sample(seq(-1,-0.2,length.out = 10), 6, replace = TRUE))
  Percent_Growth_SE <- abs(Percent_Growth * sample(seq(0,0.1,length.out = 100), 36, replace = TRUE))
  Fake_Data_to_add <- data.frame(CellLineNames,
                          DrugNames,
                          Concentrations,
                          Percent_Growth,
                          Percent_Growth_SE)
  Fake_Data <- rbind(Fake_Data, Fake_Data_to_add)
  IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                           Cell_Line_Name_Column = "CellLineNames",
                           Drug_Name_Column = "DrugNames",
                           Drug_Concentration_Column = "Concentrations",
                           Efficacy_Column = "Percent_Growth",
                           Control_Treatment_Drugs = c("D1", "D2"),
                           Control_Treatment_Drug_Concentrations = c(2, 3),
                           Test_Treatment_Drugs = c("D1", "D2", "D3"),
                           Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                           Calculate_Uncertainty = TRUE,
                           Efficacy_SE_Column = "Percent_Growth_SE",
                           n_Simulations = 1000,
                           LowerEfficacyIsBetterDrugEffect = TRUE,
                           EfficacyMetricName = "Percent_Growth",
                           CalculateHazardRatio = FALSE,
                           Average_Duplicate_Records = FALSE)

#Now setting to average duplicate values.
  IDAPredict.TestvsControl(Monotherapy_Data = Fake_Data,
                           Cell_Line_Name_Column = "CellLineNames",
                           Drug_Name_Column = "DrugNames",
                           Drug_Concentration_Column = "Concentrations",
                           Efficacy_Column = "Percent_Growth",
                           Control_Treatment_Drugs = c("D1", "D2"),
                           Control_Treatment_Drug_Concentrations = c(2, 3),
                           Test_Treatment_Drugs = c("D1", "D2", "D3"),
                           Test_Treatment_Drug_Concentrations = c(2, 3, "B"),
                           Calculate_Uncertainty = TRUE,
                           Efficacy_SE_Column = "Percent_Growth_SE",
                           n_Simulations = 1000,
                           LowerEfficacyIsBetterDrugEffect = TRUE,
                           EfficacyMetricName = "Percent_Growth",
                           CalculateHazardRatio = FALSE,
                           Average_Duplicate_Records = TRUE)

}
